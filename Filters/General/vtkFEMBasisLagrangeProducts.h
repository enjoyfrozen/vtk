// clang-format off
/*
 * Vector Basis Lagrange Product Matrices
 * Generated by yours truly from [intrepid2](https://github.com/trilinos/Trilinos/tree/master/packages/intrepid2/src/Discretization/Basis)
 *
 * In order to generate these matrices, open a python shell and call `print_phis` for given l, f.
 * l |-> point coordinates on a reference lagrange element. These are defined above each element in python code.
 * f |-> vector basis functions. This is defined above each element in python code.
 *
 * This is definitely not the best way to approach this task for a number of reasons.
 * 1. requires you to generate the matrices by hand in python.
 * 2. doesn't scale well to arbitrary order elements.
 * 3. the ordering of faces in hexahedron is specific to intrepid2.
 * 4. heck, all these basis functions are copy pasted from intrepid2 source code, so more room for human error.

----------------------------------------------------------------------------------------------------------------------------------------------
#!/usr/bin/python3

import numpy as np
def print_phis(l, f):
  print(',\n'.join(['{\n' + ',\n'.join(['{ ' + ', '.join([str(val) for val in f(pt)[ind]]) + ' }' for pt in l]) + '\n}' for ind in range(3)]))
----------------------------------------------------------------------------------------------------------------------------------------------

Here's an example that shows how I generated a matrix for the HCurl Quad basis lagrange product.
$ python
>>> import numpy as np
>>> # Define the print_phis function. copy it from above.
>>> def print_phis(l, f):
...   print(',\n'.join(['{\n' + ',\n'.join(['{ ' + ', '.join([str(val) for val in f(pt)[ind]]) + ' }' for pt in l]) + '\n}' for ind in range(3)]))
>>> # Set lagrange points for quad.
>>> l = [(-1, -1), (1, -1), (1, 1), (-1, 1)]
>>> # Define the HCurl compatible vector basis functions for a quad.
>>> def f(p):
...   x = p[0]
...   y = p[1]
...   phi0 = [0.5 * (1. - y), 0., -0.5 * (1. + y), 0.]
...   phi1 = [0, 0.5 * (1. + x), 0, -0.5 * (1. - x)]
...   phi2 = [0, 0, 0, 0]
...   return np.array([phi0, phi1, phi2])
>>> # generate and print phis
>>> print_phis(l, f)
{
{ 1.0, 0.0, -0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.0, 0.0, -1.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
>>> # Repeat for a different element. i.e, change l, f and print_phis.

*/
// clang-format on

namespace vblp // Vector Basis Lagrange Product
{
// clang-format off
namespace hcurl
{
namespace hex
{
/*
def f(p):
  x = p[0]
  y = p[1]
  z = p[2]
  phi0 = [
  (1.0 - y)*(1.0 - z)/4.0,
  0.0,
  -(1.0 + y)*(1.0 - z)/4.0,
  0.0,
  (1.0 - y)*(1.0 + z)/4.0,
  0.0,
  -(1.0 + y)*(1.0 + z)/4.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0
  ]
  phi1 = [
  0.0,
  (1.0 + x)*(1.0 - z)/4.0,
  0.0,
  -(1.0 - x)*(1.0 - z)/4.0,
  0.0,
  (1.0 + x)*(1.0 + z)/4.0,
  0.0,
  -(1.0 - x)*(1.0 + z)/4.0,
  0.0,
  0.0,
  0.0,
  0.0
  ]
  phi2 = [
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  (1.0 - x)*(1.0 - y)/4.0,
  (1.0 + x)*(1.0 - y)/4.0,
  (1.0 + x)*(1.0 + y)/4.0,
  (1.0 - x)*(1.0 + y)/4.0,
  ]
  return np.array([phi0, phi1, phi2])
*/

// I1 |-> 12 edge dof vtk [(0, 1), (1, 2), (2, 3), (3, 0), (4, 5), (5, 6), (6, 7), (7, 4), (0, 4), (1, 5), (3, 7), (2, 6)]
// I1 |-> 12 edge dof intrepid2 [(0, 1), (1, 2), (2, 3), (3, 0), (4, 5), (5, 6), (6, 7), (7, 4), (0, 4), (1, 5), (2, 6), (3, 7)]
constexpr int vtk2IntrepidEdgeMap[12] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10};
// C1 |-> 8 lagrange points l = [[-1.0, -1.0, -1.0], [1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [-1.0, 1.0, 1.0]]
constexpr double i1c1_8[3][8][12] = {
{
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }
}
};

// C1 |-> 20 lagrange points l = [[-1.0, -1.0, -1.0], [1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [-1.0, 1.0, 1.0], [0.0, -1.0, -1.0], [1.0, 0.0, -1.0], [0.0, 1.0, -1.0], [-1.0, 0.0, -1.0], [0.0, -1.0, 1.0], [1.0, 0.0, 1.0], [0.0, 1.0, 1.0], [-1.0, 0.0, 1.0], [-1.0, -1.0, 0.0], [1.0, -1.0, 0.0], [1.0, 1.0, 0.0], [-1.0, 1.0, 0.0]]
constexpr double i1c2_20[3][20][12] = {
{
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }
}
};

// C1 |-> 27 lagrange points l = [[-1., -1., -1.], [ 1., -1., -1.], [ 1.,  1., -1.], [-1.,  1., -1.], [-1., -1.,  1.], [ 1., -1.,  1.], [1., 1., 1.], [-1.,  1.,  1.], [ 0., -1., -1.], [ 1.,  0., -1.], [ 0.,  1., -1.], [-1.,  0., -1.], [ 0., -1.,  1.], [1., 0., 1.], [0., 1., 1.], [-1.,  0.,  1.], [-1., -1.,  0.], [ 1., -1.,  0.], [1., 1., 0.], [-1.,  1.,  0.], [-1.,  0.,  0.], [1., 0., 0.], [ 0., -1.,  0.], [0., 1., 0.], [ 0.,  0., -1.], [0., 0., 1.], [0., 0., 0.]]
constexpr double i1c2_27[3][27][12] = {
{
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.0, 0.0, 0.5, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -0.0, 0.0, 0.5, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.25, 0.0, -0.25, 0.0, 0.25, 0.0, -0.25, 0.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }
}
};
}

namespace quad
{
/*
def f(p):
  x = p[0]
  y = p[1]
  phi0 = [0.5 * (1. - y), 0., -0.5 * (1. + y), 0.]
  phi1 = [0, 0.5 * (1. + x), 0, -0.5 * (1. - x)]
  phi2 = [0, 0, 0, 0]
  return np.array([phi0, phi1, phi2])
*/

// I1 |-> 4 edge dof [(0, 1), (1, 2), (2, 3), (3, 0)]
// C1 |-> 4 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1)]
constexpr double i1c1_4[3][4][4] = {
{
{ 1.0, 0.0, -0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.0, 0.0, -1.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};

// C2 |-> 8 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1),  (0, -1), (1, 0), (0, 1), (-1, 0)]
//                              |- ------------ corners --------- -|  |- ----------mid-edge--------- -|
constexpr double i1c2_8[3][8][4] = {
{
{ 1.0, 0.0, -0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 0.0, 0.0, -1.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};

// C2 |-> 9 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1),  (0, -1), (1, 0), (0, 1), (-1, 0), (0, 0)]
//                              |- ------------ corners --------- -|  |- ----------mid-edge--------- -||- face center -|
constexpr double i1c2_9[3][9][4] = {
{
{ 1.0, 0.0, -0.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 1.0, 0.0, -0.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0 },
{ 0.0, 0.0, -1.0, 0.0 },
{ 0.5, 0.0, -0.5, 0.0 },
{ 0.5, 0.0, -0.5, 0.0 }
},
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 1.0, 0.0, -0.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};
}

namespace tri
{
/*
def f(p):
  x = p[0]
  y = p[1]
  phi0 = [2.0 * (1. - y), -2.0 * y, -2.0 * y]
  phi1 = [2.0 * x, 2.0 * x, 2.0 * (-1. + x)]
  phi2 = [0, 0, 0]
  return np.array([phi0, phi1, phi2])
*/

// I1 |-> 3 edge dof [(0, 1), (1, 2), (2, 0)]
// C1 |-> 3 lagrange points l = [(0, 0), (1, 0), (0, 1)]
const double i1c1_3[3][3][3] = {
{
{ 2.0, -0.0, -0.0 },
{ 2.0, -0.0, -0.0 },
{ 0.0, -2.0, -2.0 }
},
{
{ 0.0, 0.0, -2.0 },
{ 2.0, 2.0, 0.0 },
{ 0.0, 0.0, -2.0 }
},
{
{ 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0 }
}
};
}

}

namespace hdiv
{
namespace hex
{
/*
def f(p):
  x = p[0]
  y = p[1]
  z = p[2]
  phi0 = [
  0.0,
  (1.0 + x)/2.0,
  0.0,
  (x - 1.0)/2.0,
  0.0,
  0.0
  ]
  phi1 = [
  (y - 1.0)/2.0,
  0.0,
  (1.0 + y)/2.0,
  0.0,
  0.0,
  0.0
  ]
  phi2 = [
  0.0,
  0.0,
  0.0,
  0.0,
  (z - 1.0)/2.0,
  (1.0 + z)/2.0
  ]
  return np.array([phi0, phi1, phi2])
*/

// I1 |-> 6 face dof vtk [(0, 4, 7, 3), (1, 2, 6, 5), (0, 1, 5, 4), (3, 7, 6, 2), (0, 3, 2, 1), (4, 5, 6, 7)]
// I1 |-> 6 face dof intrepid2 [(0, 1, 5, 4), (1, 2, 6, 5), (3, 7, 6, 2), (0, 4, 7, 3), (0, 3, 2, 1), (4, 5, 6, 7)]
constexpr int vtk2IntrepidFaceMap[6] = {3, 1, 0, 2, 4, 5};
// C1 |-> 8 lagrange points l = [[-1.0, -1.0, -1.0], [1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [-1.0, 1.0, 1.0]]
const double i1c1_8[3][8][6] = {
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 }
},
{
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }
}
};

// C1 |-> 20 lagrange points l = [[-1.0, -1.0, -1.0], [1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, 1.0], [-1.0, 1.0, 1.0], [0.0, -1.0, -1.0], [1.0, 0.0, -1.0], [0.0, 1.0, -1.0], [-1.0, 0.0, -1.0], [0.0, -1.0, 1.0], [1.0, 0.0, 1.0], [0.0, 1.0, 1.0], [-1.0, 0.0, 1.0], [-1.0, -1.0, 0.0], [1.0, -1.0, 0.0], [1.0, 1.0, 0.0], [-1.0, 1.0, 0.0]]
constexpr double i1c2_20[3][20][6] = {
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 }
},
{
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 }
}
};

// C1 |-> 27 lagrange points l = [[-1., -1., -1.], [ 1., -1., -1.], [ 1.,  1., -1.], [-1.,  1., -1.], [-1., -1.,  1.], [ 1., -1.,  1.], [1., 1., 1.], [-1.,  1.,  1.], [ 0., -1., -1.], [ 1.,  0., -1.], [ 0.,  1., -1.], [-1.,  0., -1.], [ 0., -1.,  1.], [1., 0., 1.], [0., 1., 1.], [-1.,  0.,  1.], [-1., -1.,  0.], [ 1., -1.,  0.], [1., 1., 0.], [-1.,  1.,  0.], [-1.,  0.,  0.], [1., 0., 0.], [ 0., -1.,  0.], [0., 1., 0.], [ 0.,  0., -1.], [0., 0., 1.], [0., 0., 0.]]
constexpr double i1c2_27[3][27][6] = {
{
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5, 0.0, 0.0 }
},
{
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 },
{ 0.0, 0.0, 0.0, 0.0, -1.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },
{ 0.0, 0.0, 0.0, 0.0, -0.5, 0.5 }
}
};
}

namespace quad
{
/*
def f(p):
  x = p[0]
  y = p[1]
  phi0 = [0.0, 0.5*(1.0 + x), 0.0, 0.5*(x - 1.0)]
  phi1 = [0.5*(y - 1.0), 0.0, 0.5*(1.0 + y), 0.0]
  phi2 = [0, 0, 0, 0]
  return np.array([phi0, phi1, phi2])

*/

// I1 |-> 4 edge dof [(0, 1), (1, 2), (2, 3), (3, 0)]
// C1 |-> 4 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1)]
constexpr double i1c1_4[3][4][4] = {
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0 }
},
{
{ -1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};

// C2 |-> 8 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1),  (0, -1), (1, 0), (0, 1), (-1, 0)]
//                              |- ------------ corners --------- -|  |- ----------mid-edge--------- -|
constexpr double i1c2_8[3][8][4] = {
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 0.0, 0.0, -1.0 }
},
{
{ -1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};

// C2 |-> 9 lagrange points l = [(-1, -1), (1, -1), (1, 1), (-1, 1),  (0, -1), (1, 0), (0, 1), (-1, 0), (0, 0)]
//                              |- ------------ corners --------- -|  |- ----------mid-edge--------- -||- face center -|
constexpr double i1c2_9[3][9][4] = {
{
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 1.0, 0.0, 0.0 },
{ 0.0, 0.5, 0.0, -0.5 },
{ 0.0, 0.0, 0.0, -1.0 },
{ 0.0, 0.5, 0.0, -0.5 }
},
{
{ -1.0, 0.0, 0.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ -1.0, 0.0, 0.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0 },
{ 0.0, 0.0, 1.0, 0.0 },
{ -0.5, 0.0, 0.5, 0.0 },
{ -0.5, 0.0, 0.5, 0.0 }
},
{
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0, 0.0 }
}
};
}

namespace tri
{
/*
def f(p):
  x = p[0]
  y = p[1]
  phi0 = [2.0 * x, 2.0 * x, 2.0 * (x - 1.0)]
  phi1 = [2.0 * (y - 1.0), 2.0 * y, 2.0 * y]
  phi2 = [0, 0, 0]
  return np.array([phi0, phi1, phi2])
*/

// I1 |-> 3 edge dof [(0, 1), (1, 2), (2, 0)]
// C1 |-> 3 lagrange points l = [(0, 0), (1, 0), (0, 1)]
const double i1c1_3[3][3][3] = {
{
{ 0.0, 0.0, -2.0 },
{ 2.0, 2.0, 0.0 },
{ 0.0, 0.0, -2.0 }
},
{
{ -2.0, 0.0, 0.0 },
{ -2.0, 0.0, 0.0 },
{ 0.0, 2.0, 2.0 }
},
{
{ 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0 },
{ 0.0, 0.0, 0.0 }
}
};
}

}
// clang-format on
}
